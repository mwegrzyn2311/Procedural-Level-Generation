extends MCTSLevelGenerator

class_name PanelMockGenerator

func generate_level() -> Dictionary:
	return {
		Vector2(0,0): PANEL_ELEMENTS.Ele.START, Vector2(1, 0): PANEL_ELEMENTS.Ele.PIPE, Vector2(2, 0): PANEL_ELEMENTS.Ele.FINISH, Vector2(3, 0): PANEL_ELEMENTS.Ele.PIPE, Vector2(4, 0): PANEL_ELEMENTS.Ele.INTERSECTION, Vector2(5, 0): PANEL_ELEMENTS.Ele.PIPE, Vector2(6, 0): PANEL_ELEMENTS.Ele.INTERSECTION, Vector2(7, 0): PANEL_ELEMENTS.Ele.PIPE, Vector2(8, 0): PANEL_ELEMENTS.Ele.INTERSECTION,
		Vector2(0,1): PANEL_ELEMENTS.Ele.PIPE, Vector2(1, 1): PANEL_ELEMENTS.Ele.EMPTY, Vector2(2, 1): PANEL_ELEMENTS.Ele.PIPE, Vector2(3, 1): PANEL_ELEMENTS.Ele.EMPTY, Vector2(4, 1): PANEL_ELEMENTS.Ele.PIPE, Vector2(5, 1): Tetromino.mock(TETROMINO_UTIL.Type.PLUS, Vector2(5, 1)), Vector2(6, 1): PANEL_ELEMENTS.Ele.PIPE, Vector2(7, 1): PANEL_ELEMENTS.Ele.EMPTY, Vector2(8, 1): PANEL_ELEMENTS.Ele.PIPE,
		Vector2(0,2): PANEL_ELEMENTS.Ele.INTERSECTION, Vector2(1, 2): PANEL_ELEMENTS.Ele.PIPE, Vector2(2, 2): PANEL_ELEMENTS.Ele.INTERSECTION, Vector2(3, 2): PANEL_ELEMENTS.Ele.PIPE, Vector2(4, 2): PANEL_ELEMENTS.Ele.INTERSECTION, Vector2(5, 2): PANEL_ELEMENTS.Ele.PIPE, Vector2(6, 2): PANEL_ELEMENTS.Ele.INTERSECTION, Vector2(7, 2): PANEL_ELEMENTS.Ele.PIPE, Vector2(8, 2): PANEL_ELEMENTS.Ele.INTERSECTION,
		Vector2(0,3): PANEL_ELEMENTS.Ele.PIPE, Vector2(1, 3): PANEL_ELEMENTS.Ele.EMPTY, Vector2(2, 3): PANEL_ELEMENTS.Ele.PIPE, Vector2(3, 3): PANEL_ELEMENTS.Ele.EMPTY, Vector2(4, 3): PANEL_ELEMENTS.Ele.PIPE, Vector2(5, 3): PANEL_ELEMENTS.Ele.EMPTY, Vector2(6, 3): PANEL_ELEMENTS.Ele.PIPE, Vector2(7, 3): PANEL_ELEMENTS.Ele.EMPTY, Vector2(8, 3): PANEL_ELEMENTS.Ele.PIPE,
		Vector2(0,4): PANEL_ELEMENTS.Ele.INTERSECTION, Vector2(1, 4): PANEL_ELEMENTS.Ele.PIPE, Vector2(2, 4): PANEL_ELEMENTS.Ele.INTERSECTION, Vector2(3, 4): PANEL_ELEMENTS.Ele.PIPE, Vector2(4, 4): PANEL_ELEMENTS.Ele.INTERSECTION, Vector2(5, 4): PANEL_ELEMENTS.Ele.PIPE, Vector2(6, 4): PANEL_ELEMENTS.Ele.INTERSECTION, Vector2(7, 4): PANEL_ELEMENTS.Ele.PIPE, Vector2(8, 4): PANEL_ELEMENTS.Ele.INTERSECTION,
		Vector2(0,5): PANEL_ELEMENTS.Ele.PIPE, Vector2(1, 5): PANEL_ELEMENTS.Ele.EMPTY, Vector2(2, 5): PANEL_ELEMENTS.Ele.PIPE, Vector2(3, 5): PANEL_ELEMENTS.Ele.EMPTY, Vector2(4, 5): PANEL_ELEMENTS.Ele.PIPE, Vector2(5, 5): PANEL_ELEMENTS.Ele.EMPTY, Vector2(6, 5): PANEL_ELEMENTS.Ele.PIPE, Vector2(7, 5): PANEL_ELEMENTS.Ele.EMPTY, Vector2(8, 5): PANEL_ELEMENTS.Ele.PIPE,
		Vector2(0,6): PANEL_ELEMENTS.Ele.INTERSECTION, Vector2(1, 6): PANEL_ELEMENTS.Ele.PIPE, Vector2(2, 6): PANEL_ELEMENTS.Ele.INTERSECTION, Vector2(3, 6): PANEL_ELEMENTS.Ele.PIPE, Vector2(4, 6): PANEL_ELEMENTS.Ele.INTERSECTION, Vector2(5, 6): PANEL_ELEMENTS.Ele.PIPE, Vector2(6, 6): PANEL_ELEMENTS.Ele.INTERSECTION, Vector2(7, 6): PANEL_ELEMENTS.Ele.PIPE, Vector2(8, 6): PANEL_ELEMENTS.Ele.INTERSECTION,
		Vector2(0,7): PANEL_ELEMENTS.Ele.PIPE, Vector2(1, 7): PANEL_ELEMENTS.Ele.EMPTY, Vector2(2, 7): PANEL_ELEMENTS.Ele.PIPE, Vector2(3, 7): PANEL_ELEMENTS.Ele.EMPTY, Vector2(4, 7): PANEL_ELEMENTS.Ele.PIPE, Vector2(5, 7): Tetromino.mock(TETROMINO_UTIL.Type.ONE_BY_TRHEE, Vector2(5, 7)), Vector2(6, 7): PANEL_ELEMENTS.Ele.PIPE, Vector2(7, 7): PANEL_ELEMENTS.Ele.EMPTY, Vector2(8, 7): PANEL_ELEMENTS.Ele.PIPE,
		Vector2(0,8): PANEL_ELEMENTS.Ele.INTERSECTION, Vector2(1, 8): PANEL_ELEMENTS.Ele.PIPE, Vector2(2, 8): PANEL_ELEMENTS.Ele.INTERSECTION, Vector2(3, 8): PANEL_ELEMENTS.Ele.PIPE, Vector2(4, 8): PANEL_ELEMENTS.Ele.INTERSECTION, Vector2(5, 8): PANEL_ELEMENTS.Ele.PIPE, Vector2(6, 8): PANEL_ELEMENTS.Ele.INTERSECTION, Vector2(7, 8): PANEL_ELEMENTS.Ele.PIPE, Vector2(8, 8): PANEL_ELEMENTS.Ele.INTERSECTION,
	}
